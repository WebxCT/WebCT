img.image-projection {
	border-width: 0.25rem;
	border-color: #7ECEFD;
	border-style: solid;
	transition: all 0.5s ease-out;
	object-position: center center;
	object-fit: none;
}

.image-scene {
	transition: all 0.5s ease-out;
	object-position: center center;
	object-fit: cover;
	background-color: white;
}

video.updating,
img.updating {
	border-color: var(--sl-color-yellow-300);
	background-color: var(--sl-color-yellow-300);
}

video.error,
img.error {
	border-color: #FF7F66;
}

.half-pane img {
	// width: 80%;
	// height: 80%;
	max-height: 100%;
	max-width: 100%;
	margin: auto;
}

#webgl {
	display: block;
	// border-top-width: 0.25rem;
	// border-color: var(--sl-color-primary-500);
	// border-top-style: outset;
}
#previewPane {
	height: 100%;
	width: 100%;
	box-sizing: border-box;
	
	// sidebar pushes content 100% down, so move image back up.
	// Can't use fixed positioning on sidebar due to resizing elements.
	transform: translate(0, -100%);
}

.previewContainer {
	width: 100%;
	height: 100%;
}

.previewContainer > div {
	flex-direction: column;
	justify-content: center;
	box-sizing: border-box;
	padding: 0.25rem;
	align-items: center;
	display: flex;
	height: 100%;
}

img.image-layout {
	border-width: 0.25rem;
	border-color: #7ECEFD;
	border-style: solid;
	transition: all 0.5s ease-out;
	object-position: center center;
	object-fit: contain;
	background-color: white;
}

#previewLayout {
	height: 100%;
	width: 100%;
}

#previewPane:not([selected=projection]) #previewImage {
	display: none;
}

#previewPane:not([selected=layout]) #previewLayout {
	display: none;
}

#previewPane:not([selected=recon]) #previewReconstruction {
	display: none;
}

#previewSettings {
	height: 0;
	z-index: 11;
	position: relative;
}

#settingsPane:not([selected=projection]) {
	display: none;
}

#previewGraphContainer:not([selected=projection]) {
	display: none;
}

#previewSidebar {
	// overlap image preview
	z-index: 1;
	width: 14rem;
	position: relative;
	height: inherit;
	display: flex;
	flex-direction: column;
}

#previewGraphContainer {
	height: 100%;
	width: 100%;
	flex-grow: 1;
	flex-shrink: 1;
}

#previewSettings > sl-button-group > sl-button {
	width: 7rem;
}

#previewSettings > sl-button-group {
	display: block;
	position: fixed;
	// margin-top: -1.5rem;
	z-index: 1;
}

#settingsPane > div > * {
	display: block;
	margin-top: 0.2rem;
}

#settingsPane > div {
	padding: 1.5rem;
	display: block;
}

#settingsPane:not([active]) sl-radio-group {
	display: none;
}

#settingsPane:not([active]) sl-range {
	display: none;
}

#settingsPane:not([active]) * {
	height: 0;
	opacity: 0;
	padding: 0;
	margin: 0;
}

#settingsPane:not([active]) {
	height: 3rem;
	transition: all 0.5s;
	overflow: hidden;
	padding: 0;
	border-color: var(--sl-color-primary-500);
	background-color: var(--sl-color-neutral-100);
}

#settingsPane {
	opacity: 100;
	transition: all 0.25s;
	height: auto;
	padding-top: 0.5rem;
	width: 14rem;
	border-radius: 0.9rem;
	border-color: var(--sl-color-primary-500);
	border-style: groove;
	border-width: 1px;
	box-sizing: border-box;
	flex-shrink: 0;
	flex-grow: 1;
}

#settingsPane > div {
	background-color: var(--sl-color-neutral-100);
}

#settingsPane:not([active]) > div {
	background-color: var(--sl-color-primary-50);
}

#settingsPane > button {
	margin-top: 0;
	padding: 0;
	height: 1rem;
	width: 100%;
	border: 0;
	border-bottom-left-radius: 0.9rem;
	display: flex;
	border-bottom-right-radius: 0.9rem;
	z-index: 100;
	align-items: center;
	justify-content: center;
	padding-top: 0rem;
	color: white;
	font-size: large;
	stroke: white;
	transition: all 0.25s ease-in;
	background-color: var(--sl-color-neutral-500);
}

#settingsPane:not([active]) > button {
	height: 3rem;
	opacity: 100;
	padding-top: 1.7rem;
	background-color: var(--sl-color-primary-500);
}

#settingsPane > #previewSettingsButton > sl-icon {
	// duplicate in order to enforce selector priority
	height: inherit;
	opacity: inherit;
}

#settingsPane > button:hover {
	background-color: var(--sl-color-neutral-400);
	box-shadow: inset;
	transition: background-color 0.5s ease-in-out;
}

#settingsPane:not([active]) > button:hover {
	background-color: var(--sl-color-primary-600);
}
